[2020-04-16 11:20:22,016] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:20:34,109] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:20:34,223] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2020-04-16 11:20:34,224] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:20:34,233] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:20:34,248] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:20:34,254] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:20:34,314] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 1168) (kafka.controller.KafkaController)
[2020-04-16 11:20:34,328] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-04-16 11:20:34,349] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:20:34,446] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-04-16 11:20:34,447] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:20:34,448] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:20:34,449] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:20:34,452] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:20:34,458] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,459] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,460] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:20:34,461] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-16 11:20:34,462] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:20:34,522] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:20:34,525] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:20:34,550] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:20:34,551] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:20:34,556] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:20:34,558] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:20:34,559] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:20:34,594] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:20:34,595] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2020-04-16 11:20:34,607] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,608] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,631] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,632] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:20:34,634] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:20:34,682] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:20:36,605] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-16 11:20:36,606] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:20:36,640] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-16 11:20:36,643] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:20:36,646] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:20:36,656] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-16 11:20:36,660] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 1168, 2 -> 1184) (kafka.controller.KafkaController)
[2020-04-16 11:20:36,744] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:20:36,779] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:20:39,685] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:20:39,686] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:20:39,690] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-16 11:25:39,692] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:25:39,692] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:25:39,692] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-16 11:29:03,850] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:30:39,693] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:30:39,693] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:30:39,694] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-16 11:34:30,900] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:34:30,901] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-04-16 11:34:30,903] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2020-04-16 11:34:30,910] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-04-16 11:34:30,917] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:34:30,917] DEBUG [Controller id=1] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-16 11:34:30,918] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:34:30,919] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,122] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,123] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,123] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,124] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:34:32,126] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2020-04-16 11:34:32,130] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:34:32,132] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,134] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,134] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,134] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,137] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,139] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,139] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,143] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:34:32,179] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2020-04-16 11:34:32,179] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:34:32,184] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:34:32,190] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:34:32,193] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:34:32,202] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 1184) (kafka.controller.KafkaController)
[2020-04-16 11:34:32,208] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:34:32,216] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:34:32,227] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,228] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:34:32,229] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:34:32,229] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:34:32,230] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:34:32,233] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,234] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,234] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:34:32,235] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-16 11:34:32,236] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:34:32,275] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,276] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,282] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:34:32,291] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,292] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,293] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:34:32,297] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:34:32,324] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:34:32,324] INFO [Controller id=2] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2020-04-16 11:34:32,335] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,335] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,336] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,337] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:34:32,340] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:34:32,364] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:34:32,388] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:34:32,413] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,434] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,434] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:34:32,435] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:34:32,437] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:34:32,443] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:34:32,446] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:34:32,450] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,453] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,453] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,455] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:34:32,459] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:35:30,833] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:35:40,964] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:35:41,069] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2020-04-16 11:35:41,070] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:35:41,091] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:35:41,101] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:35:41,111] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:35:41,161] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 1249) (kafka.controller.KafkaController)
[2020-04-16 11:35:41,177] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-16 11:35:41,192] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:35:41,357] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-16 11:35:41,357] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:35:41,358] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:35:41,363] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:35:41,363] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:35:41,384] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,386] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,386] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:35:41,388] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-16 11:35:41,390] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:35:41,454] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:35:41,456] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:35:41,500] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:35:41,501] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:35:41,503] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:35:41,505] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:35:41,508] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:35:41,525] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:35:41,527] INFO [Controller id=0] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2020-04-16 11:35:41,546] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,548] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,549] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,550] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:35:41,553] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:35:41,616] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:35:44,533] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-04-16 11:35:44,534] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:35:44,565] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-04-16 11:35:44,565] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:35:44,573] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:35:44,583] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-16 11:35:44,595] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1249, 1 -> 1267) (kafka.controller.KafkaController)
[2020-04-16 11:35:44,757] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:35:44,808] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:35:46,628] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:35:46,629] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:35:46,632] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-16 11:35:47,154] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-16 11:35:47,155] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:35:47,169] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-16 11:35:47,176] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-16 11:35:47,178] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:35:47,183] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:35:47,190] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1249, 1 -> 1267, 2 -> 1283) (kafka.controller.KafkaController)
[2020-04-16 11:35:47,342] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:35:47,381] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:36:11,784] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:36:11,785] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:36:19,348] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:36:19,348] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:36:25,954] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:36:25,954] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:37:48,753] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-16 11:37:48,754] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-16 11:37:48,755] DEBUG [Controller id=0] Live brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-16 11:37:48,920] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:49,026] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:49,029] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:11),BatchTopic-2 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:11),AlarmTopic-2 -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:11),ReportTopic-1 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:11),BatchTopic-1 -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:11),AlarmTopic-1 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:11),ReportTopic-0 -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:11),BatchTopic-0 -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:11),AlarmTopic-0 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:11) (kafka.controller.KafkaController)
[2020-04-16 11:37:49,064] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:37:49,064] DEBUG [Controller id=0] All shutting down brokers: 0,2 (kafka.controller.KafkaController)
[2020-04-16 11:37:49,064] DEBUG [Controller id=0] Live brokers: 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:49,113] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,129] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:49,165] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:49,165] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),ReportTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),ReportTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11) (kafka.controller.KafkaController)
[2020-04-16 11:37:49,170] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:49,170] DEBUG [Controller id=0] All shutting down brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-16 11:37:49,171] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:37:49,195] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),ReportTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),ReportTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),BatchTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11),AlarmTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:11) (kafka.controller.KafkaController)
[2020-04-16 11:37:49,222] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,324] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,426] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,528] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,629] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,731] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,833] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,934] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:37:49,954] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:49,956] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:49,957] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:49,958] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:37:49,960] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-04-16 11:37:49,964] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:49,969] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:49,977] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:37:49,978] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:37:49,978] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:37:49,987] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:37:49,987] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:37:49,987] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,001] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,002] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,002] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,002] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,011] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:37:50,045] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 12 and epoch zk version is now 12 (kafka.controller.KafkaController)
[2020-04-16 11:37:50,046] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:37:50,050] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:37:50,060] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:37:50,061] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:37:50,068] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:37:50,076] INFO [Controller id=2] Initialized broker epochs cache: Map(1 -> 1267, 2 -> 1283) (kafka.controller.KafkaController)
[2020-04-16 11:37:50,091] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-04-16 11:37:50,115] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:37:50,123] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:37:50,133] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,134] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,134] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-04-16 11:37:50,135] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:37:50,135] INFO [Controller id=2] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:37:50,136] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:37:50,144] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:37:50,145] INFO [Controller id=2] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:37:50,146] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:37:50,147] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:37:50,148] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:37:50,164] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:50,164] INFO [RequestSendThread controllerId=2] Controller 2 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,171] INFO [RequestSendThread controllerId=2] Controller 2 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:37:50,175] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:50,226] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:50,303] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:50,304] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:50,316] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:50,321] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:50,321] INFO [Controller id=2] Ready to serve as the new controller with epoch 12 (kafka.controller.KafkaController)
[2020-04-16 11:37:50,329] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:37:50,329] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:37:50,330] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:37:50,330] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:37:50,332] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:37:50,359] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:37:54,106] INFO [Controller id=2] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:54,107] DEBUG [Controller id=2] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:54,108] DEBUG [Controller id=2] Live brokers: 2 (kafka.controller.KafkaController)
[2020-04-16 11:37:54,148] TRACE [Controller id=2] All leaders = ReportTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),ReportTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),ReportTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12) (kafka.controller.KafkaController)
[2020-04-16 11:37:54,153] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:37:54,153] DEBUG [Controller id=2] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-16 11:37:54,153] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:37:54,158] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:54,184] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:37:54,184] TRACE [Controller id=2] All leaders = ReportTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),ReportTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),ReportTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),BatchTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12),AlarmTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:12) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,361] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:37:55,362] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:37:55,369] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,373] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,376] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:37:55,377] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:37:55,387] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:55,390] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:55,390] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:37:55,391] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:37:55,392] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,398] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:55,407] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:55,411] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,412] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,412] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,418] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,422] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,422] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,431] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:37:55,462] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 13 and epoch zk version is now 13 (kafka.controller.KafkaController)
[2020-04-16 11:37:55,463] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:37:55,472] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:37:55,483] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:37:55,489] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:37:55,506] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 1267) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,533] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,566] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:37:55,576] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,576] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,577] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:37:55,577] INFO [Controller id=1] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:37:55,578] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:37:55,585] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:37:55,586] INFO [Controller id=1] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:37:55,586] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:37:55,587] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:37:55,588] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:37:55,602] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:55,609] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:37:55,617] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:55,663] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:55,720] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:37:55,721] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:55,728] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:55,731] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:37:55,732] INFO [Controller id=1] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2020-04-16 11:37:55,740] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:37:55,741] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:37:55,741] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:37:55,742] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:37:55,743] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:37:55,755] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:37:59,177] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:59,178] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-04-16 11:37:59,178] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:37:59,228] TRACE [Controller id=1] All leaders = ReportTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),BatchTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),AlarmTopic-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),ReportTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),BatchTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),AlarmTopic-1 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),ReportTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),BatchTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13),AlarmTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:13) (kafka.controller.KafkaController)
[2020-04-16 11:38:00,757] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:38:00,758] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:38:00,765] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:38:00,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:38:00,771] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:38:00,772] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:38:00,773] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-16 11:38:00,773] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:38:00,773] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:38:00,773] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:38:00,773] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:38:05,243] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:38:05,247] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:38:05,247] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:38:05,247] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:38:05,249] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-04-16 11:38:05,252] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:38:05,259] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:38:05,262] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:38:05,263] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:38:05,263] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:38:05,274] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:40:10,805] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:40:44,908] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:45,076] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2020-04-16 11:40:45,102] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:40:45,118] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:40:45,196] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:40:45,222] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:40:45,378] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:45,535] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 1468, 3 -> 1470, 4 -> 1469) (kafka.controller.KafkaController)
[2020-04-16 11:40:45,594] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:45,683] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:40:45,842] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:45,890] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:46,073] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:46,081] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:46,176] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:46,282] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:46,292] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:46,309] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:40:46,334] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:40:46,334] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:46,338] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:46,338] INFO [Controller id=0] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:40:46,341] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:40:46,454] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:40:46,456] INFO [Controller id=0] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:40:46,487] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:40:46,521] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:40:46,522] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:40:46,617] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:46,763] INFO [ControllerEventThread controllerId=6] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:46,952] INFO [ControllerEventThread controllerId=7] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:47,003] DEBUG [Controller id=6] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:47,090] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:47,102] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:47,129] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:47,168] DEBUG [Controller id=7] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:47,174] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:40:47,225] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:47,340] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:40:47,464] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:47,879] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:40:48,007] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:40:48,258] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:40:48,816] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:40:48,820] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:40:49,022] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:40:49,850] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(ReportTopic-2 -> OfflinePartition, BatchTopic-2 -> OfflinePartition, AlarmTopic-2 -> OfflinePartition, ReportTopic-1 -> OfflinePartition, BatchTopic-1 -> OfflinePartition, AlarmTopic-1 -> OfflinePartition, ReportTopic-0 -> OfflinePartition, BatchTopic-0 -> OfflinePartition, AlarmTopic-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:40:49,853] INFO [Controller id=0] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2020-04-16 11:40:49,907] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:40:49,915] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:40:49,917] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:40:49,918] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:40:49,939] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:40:50,018] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:40:50,410] INFO [Controller id=0] Newly added brokers: 1,2,5,6,7, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:40:50,411] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:50,470] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:50,518] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,552] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:50,585] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:50,588] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,602] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,652] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:40:50,710] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,712] INFO [Controller id=0] New broker startup callback for 1,2,5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:40:50,718] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,724] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,727] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,728] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,732] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9098 (id: 6 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:50,737] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9099 (id: 7 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:40:51,765] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1, 2, 5, 6, 7) (kafka.controller.KafkaController)
[2020-04-16 11:40:51,797] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1468, 5 -> 1478, 1 -> 1472, 6 -> 1473, 2 -> 1476, 7 -> 1475, 3 -> 1470, 4 -> 1469) (kafka.controller.KafkaController)
[2020-04-16 11:40:55,032] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:40:55,033] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:40:55,037] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:40:55,042] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:40:55,044] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,046] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions ReportTopic-2,AlarmTopic-1,BatchTopic-2 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:40:55,116] INFO [Controller id=0] Partition ReportTopic-2 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,116] INFO [Controller id=0] Partition AlarmTopic-1 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,116] INFO [Controller id=0] Partition BatchTopic-2 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,116] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-16 11:40:55,116] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:40:55,117] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,117] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions AlarmTopic-0,BatchTopic-1,ReportTopic-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:40:55,210] INFO [Controller id=0] Partition AlarmTopic-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,211] INFO [Controller id=0] Partition BatchTopic-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-04-16 11:40:55,211] INFO [Controller id=0] Partition ReportTopic-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-04-16 11:41:01,811] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 5, 1, 6, 2, 7, 3, 4) for TopicPartitions: ArrayBuffer(ReportTopic-2, AlarmTopic-0, AlarmTopic-1, ReportTopic-0, BatchTopic-0, AlarmTopic-2, BatchTopic-2, BatchTopic-1, ReportTopic-1) (kafka.controller.KafkaController)
[2020-04-16 11:45:55,211] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:45:55,211] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:45:55,215] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:45:55,215] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-16 11:45:55,215] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:45:55,216] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-16 11:45:55,216] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:45:55,216] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-16 11:45:55,216] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:46:29,538] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:48:59,913] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-16 11:48:59,916] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-16 11:48:59,917] DEBUG [Controller id=0] Live brokers: 5,1,6,2,7,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:00,383] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:00,584] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:00,587] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-2 -> (Leader:1,ISR:1,2,LeaderEpoch:5,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-1 -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-0 -> (Leader:1,ISR:1,2,LeaderEpoch:5,ControllerEpoch:14),BatchTopic-0 -> (Leader:1,ISR:1,2,LeaderEpoch:5,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:00,597] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:49:00,597] DEBUG [Controller id=0] All shutting down brokers: 0,1 (kafka.controller.KafkaController)
[2020-04-16 11:49:00,598] DEBUG [Controller id=0] Live brokers: 5,6,2,7,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:00,907] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:01,014] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,071] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:01,134] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,122] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,136] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,139] DEBUG [Controller id=0] All shutting down brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,139] DEBUG [Controller id=0] Live brokers: 5,6,7,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,201] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,203] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,203] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,203] DEBUG [Controller id=0] Live brokers: 5,6,7,3 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,205] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,206] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,206] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,206] DEBUG [Controller id=0] Live brokers: 5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,209] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,211] INFO [Controller id=0] Shutting down broker 6 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,211] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,6,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,211] DEBUG [Controller id=0] Live brokers: 5,7 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,212] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,213] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,213] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,2,6,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,214] DEBUG [Controller id=0] Live brokers: 7 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,215] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,216] INFO [Controller id=0] Shutting down broker 7 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,216] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,2,6,3,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:01,216] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:49:01,217] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:14),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:14) (kafka.controller.KafkaController)
[2020-04-16 11:49:01,235] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,336] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,440] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,542] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,644] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,746] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,847] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:01,949] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,051] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,153] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,255] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,359] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,461] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,473] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:02,476] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:02,476] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:02,477] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:02,478] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 5, 4, 7, 1, 3, 6, 0) (kafka.controller.KafkaController)
[2020-04-16 11:49:02,485] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:02,491] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:02,495] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,495] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,495] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,506] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,509] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,509] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,512] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,512] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,512] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,533] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,536] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,537] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,546] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,546] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,548] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,552] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,552] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,554] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,561] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,561] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,561] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,564] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,573] WARN [RequestSendThread controllerId=0] Controller 0 epoch 14 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=14, deletePartitions=false, brokerEpoch=1468, partitions=AlarmTopic-2,ReportTopic-2,BatchTopic-0,ReportTopic-0,AlarmTopic-1,BatchTopic-2) to broker bumblebee:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:02,573] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,573] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,573] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:02,586] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:02,720] INFO [Controller id=4] 4 successfully elected as the controller. Epoch incremented to 15 and epoch zk version is now 15 (kafka.controller.KafkaController)
[2020-04-16 11:49:02,721] INFO [Controller id=4] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:49:02,746] INFO [Controller id=4] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:02,747] DEBUG [Controller id=3] Broker 4 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,778] INFO [Controller id=4] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:02,786] INFO [Controller id=4] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:49:02,799] DEBUG [Controller id=1] Broker 4 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,803] DEBUG [Controller id=2] Broker 4 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,796] DEBUG [Controller id=5] Broker 4 was elected as controller instead of broker 5 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,799] DEBUG [Controller id=6] Broker 4 was elected as controller instead of broker 6 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,806] DEBUG [Controller id=7] Broker 4 was elected as controller instead of broker 7 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:02,834] INFO [Controller id=4] Initialized broker epochs cache: Map(5 -> 1478, 1 -> 1472, 6 -> 1473, 2 -> 1476, 7 -> 1475, 3 -> 1470, 4 -> 1469) (kafka.controller.KafkaController)
[2020-04-16 11:49:02,871] DEBUG [Controller id=4] Register BrokerModifications handler for Set(5, 1, 6, 2, 7, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:49:02,938] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,948] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,954] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,960] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,965] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,970] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,977] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:02,995] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,004] INFO [Controller id=4] Currently active brokers in the cluster: Set(5, 1, 6, 2, 7, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:49:03,005] INFO [Controller id=4] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:03,006] INFO [Controller id=4] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:49:03,008] INFO [Controller id=4] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:49:03,009] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,010] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,001] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,013] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,001] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,014] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,031] INFO [Controller id=4] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:49:03,032] INFO [Controller id=4] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:49:03,059] INFO [Controller id=4] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:49:03,062] INFO [Topic Deletion Manager 4] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:49:03,067] INFO [Controller id=4] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:49:03,099] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,104] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9099 (id: 7 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,107] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,107] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,109] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,111] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,118] INFO [RequestSendThread controllerId=4] Controller 4 connected to bumblebee:9098 (id: 6 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:03,141] INFO [ReplicaStateMachine controllerId=4] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:03,177] INFO [ReplicaStateMachine controllerId=4] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:03,281] INFO [ReplicaStateMachine controllerId=4] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:03,454] DEBUG [ReplicaStateMachine controllerId=4] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:03,462] INFO [PartitionStateMachine controllerId=4] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:03,535] INFO [PartitionStateMachine controllerId=4] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:03,546] DEBUG [PartitionStateMachine controllerId=4] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:03,547] INFO [Controller id=4] Ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2020-04-16 11:49:03,566] INFO [Controller id=4] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:03,567] INFO [Controller id=4] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:03,568] INFO [Controller id=4] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:49:03,572] INFO [Controller id=4] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:49:03,576] INFO [Controller id=4] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:03,601] INFO [Controller id=4] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:49:05,865] INFO [Controller id=4] Shutting down broker 7 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,865] DEBUG [Controller id=4] All shutting down brokers: 7 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,866] DEBUG [Controller id=4] Live brokers: 5,1,6,2,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,873] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:05,886] INFO [Controller id=4] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,886] DEBUG [Controller id=4] All shutting down brokers: 1,7 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,886] DEBUG [Controller id=4] Live brokers: 5,6,2,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:05,891] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:06,009] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:49:06,010] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,037] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,046] INFO [Controller id=4] Shutting down broker 4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,051] DEBUG [Controller id=4] All shutting down brokers: 1,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,051] DEBUG [Controller id=4] Live brokers: 5,6,2,3 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,053] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,055] INFO [Controller id=4] Shutting down broker 6 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,055] DEBUG [Controller id=4] All shutting down brokers: 1,6,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,056] DEBUG [Controller id=4] Live brokers: 5,2,3 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,057] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,059] INFO [Controller id=4] Shutting down broker 3 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,059] DEBUG [Controller id=4] All shutting down brokers: 1,6,3,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,060] DEBUG [Controller id=4] Live brokers: 5,2 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,061] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,063] INFO [Controller id=4] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,064] DEBUG [Controller id=4] All shutting down brokers: 1,2,6,3,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,064] DEBUG [Controller id=4] Live brokers: 5 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,151] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,266] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,301] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,304] INFO [Controller id=4] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,304] DEBUG [Controller id=4] All shutting down brokers: 1,5,2,6,3,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:49:06,304] DEBUG [Controller id=4] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:49:06,307] TRACE [Controller id=4] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:15),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-04-16 11:49:06,368] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,471] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,573] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,674] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,778] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,880] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:06,983] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,023] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,025] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,025] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,026] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:07,027] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:07,029] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:07,031] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,034] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:07,064] INFO [Controller id=4] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2,3,4,5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:49:07,068] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,068] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,068] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,072] INFO [Controller id=4] Broker failure callback for 1 (kafka.controller.KafkaController)
[2020-04-16 11:49:07,074] INFO [Controller id=4] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-04-16 11:49:07,084] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,156] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,158] DEBUG [Controller id=4] Unregister BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,164] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,160] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,166] INFO [Controller id=4] Updated broker epochs cache: Map(5 -> 1478, 6 -> 1473, 2 -> 1476, 7 -> 1475, 3 -> 1470, 4 -> 1469) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,187] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,259] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,257] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,264] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,266] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,265] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:07,264] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,266] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set(2, 5, 4, 7, 3, 6) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,268] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,269] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:07,274] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,278] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,278] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,278] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,291] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,291] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,291] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,292] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,302] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,302] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,302] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,303] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,310] INFO [ControllerEventThread controllerId=7] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,314] INFO [ControllerEventThread controllerId=7] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,314] INFO [ControllerEventThread controllerId=7] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,315] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,315] DEBUG [Controller id=7] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:07,318] WARN [RequestSendThread controllerId=4] Controller 4 epoch 15 fails to send request (type: UpdateMetadataRequest=, controllerId=4, controllerEpoch=15, brokerEpoch=1475, partitionStates=[UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[1, 0]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 0, 1], offlineReplicas=[0, 1]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 1]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 1, 2], offlineReplicas=[0, 1]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[1, 0]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 2, 0], offlineReplicas=[1, 0]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9099 (id: 7 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,318] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,318] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,323] DEBUG [Controller id=7] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:07,325] INFO [PartitionStateMachine controllerId=7] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:07,328] INFO [ReplicaStateMachine controllerId=7] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,329] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,332] INFO [Controller id=7] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:07,333] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,334] WARN [RequestSendThread controllerId=4] Controller 4 epoch 15 fails to send request (type: UpdateMetadataRequest=, controllerId=4, controllerEpoch=15, brokerEpoch=1470, partitionStates=[UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[2, 1, 0]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 0, 1], offlineReplicas=[2, 0, 1]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0, 2]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 2, 1]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 1, 2], offlineReplicas=[0, 1, 2]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[2, 1, 0]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0, 2]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 2, 0], offlineReplicas=[1, 2, 0]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 2, 1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,334] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,334] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,334] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,345] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,348] WARN [RequestSendThread controllerId=4] Controller 4 epoch 15 fails to send request (type: UpdateMetadataRequest=, controllerId=4, controllerEpoch=15, brokerEpoch=1473, partitionStates=[UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[2, 1, 0]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 0, 1], offlineReplicas=[2, 0, 1]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=2, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0, 2]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 2, 1]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 1, 2], offlineReplicas=[0, 1, 2]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=1, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[2, 1, 0], offlineReplicas=[2, 1, 0]), UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 0, 2], offlineReplicas=[1, 0, 2]), UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=6, isr=[2], zkVersion=8, replicas=[1, 2, 0], offlineReplicas=[1, 2, 0]), UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=15, leader=2, leaderEpoch=7, isr=[2], zkVersion=9, replicas=[0, 2, 1], offlineReplicas=[0, 2, 1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9098 (id: 6 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,349] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,349] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,349] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,356] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:07,402] DEBUG [Controller id=5] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:49:07,410] DEBUG [Controller id=2] Broker 3 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:07,413] DEBUG [Controller id=6] Broker 3 was elected as controller instead of broker 6 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:07,430] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 16 and epoch zk version is now 16 (kafka.controller.KafkaController)
[2020-04-16 11:49:07,431] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:49:07,459] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:07,476] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:07,486] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:49:07,574] INFO [Controller id=3] Initialized broker epochs cache: Map(2 -> 1476, 3 -> 1470, 5 -> 1478, 6 -> 1473) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,620] DEBUG [Controller id=3] Register BrokerModifications handler for Set(2, 3, 5, 6) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,662] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,687] INFO [ControllerEventThread controllerId=6] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,723] INFO [ControllerEventThread controllerId=6] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,723] INFO [ControllerEventThread controllerId=6] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:07,730] DEBUG [Controller id=6] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:07,734] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:07,754] DEBUG [Controller id=6] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:07,760] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:07,765] INFO [PartitionStateMachine controllerId=6] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:07,770] INFO [ReplicaStateMachine controllerId=6] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,780] INFO [Controller id=6] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:07,792] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:07,795] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:07,804] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,809] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,810] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,805] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,810] INFO [Controller id=3] Currently active brokers in the cluster: Set(2, 3, 5, 6) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,811] INFO [Controller id=3] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:07,812] INFO [Controller id=3] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:49:07,813] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:49:07,825] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:49:07,826] INFO [Controller id=3] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:49:07,827] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:49:07,828] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:49:07,829] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:49:07,848] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,848] INFO [RequestSendThread controllerId=3] Controller 3 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,849] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,849] INFO [RequestSendThread controllerId=3] Controller 3 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:07,852] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,862] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,916] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:07,953] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:07,954] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:08,002] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,003] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,011] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,018] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,019] INFO [Controller id=3] Ready to serve as the new controller with epoch 16 (kafka.controller.KafkaController)
[2020-04-16 11:49:08,029] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,030] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,030] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,031] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,034] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:08,048] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:49:08,058] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:08,061] WARN [RequestSendThread controllerId=3] Controller 3's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:08,067] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:08,067] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:08,067] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:08,069] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set(2, 5, 3, 6) (kafka.controller.KafkaController)
[2020-04-16 11:49:08,072] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,073] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,075] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,075] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,075] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,077] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,078] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,078] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,083] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,084] WARN [RequestSendThread controllerId=3] Controller 3 epoch 16 fails to send request (type: UpdateMetadataRequest=, controllerId=3, controllerEpoch=16, brokerEpoch=1470, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:08,084] TRACE [RequestSendThread controllerId=3] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,085] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,085] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,088] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,088] WARN [RequestSendThread controllerId=3] Controller 3 epoch 16 fails to send request (type: UpdateMetadataRequest=, controllerId=3, controllerEpoch=16, brokerEpoch=1473, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9098 (id: 6 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:49:08,088] TRACE [RequestSendThread controllerId=3] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,088] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,088] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,093] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:08,118] INFO [Controller id=5] 5 successfully elected as the controller. Epoch incremented to 17 and epoch zk version is now 17 (kafka.controller.KafkaController)
[2020-04-16 11:49:08,119] INFO [Controller id=5] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:49:08,125] INFO [Controller id=5] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:08,128] DEBUG [Controller id=2] Broker 5 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:49:08,132] INFO [Controller id=5] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:08,135] INFO [Controller id=5] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:49:08,147] INFO [Controller id=5] Initialized broker epochs cache: Map(2 -> 1476, 5 -> 1478) (kafka.controller.KafkaController)
[2020-04-16 11:49:08,184] DEBUG [Controller id=5] Register BrokerModifications handler for Set(2, 5) (kafka.controller.KafkaController)
[2020-04-16 11:49:08,220] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:08,287] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:08,312] INFO [Controller id=5] Currently active brokers in the cluster: Set(2, 5) (kafka.controller.KafkaController)
[2020-04-16 11:49:08,313] INFO [Controller id=5] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:08,314] INFO [Controller id=5] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:49:08,315] INFO [Controller id=5] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:49:08,315] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,316] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,332] INFO [Controller id=5] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,332] INFO [Controller id=5] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:49:08,333] INFO [Controller id=5] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:49:08,334] INFO [Topic Deletion Manager 5] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:49:08,335] INFO [Controller id=5] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:49:08,377] INFO [RequestSendThread controllerId=5] Controller 5 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,378] INFO [RequestSendThread controllerId=5] Controller 5 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:08,411] INFO [ReplicaStateMachine controllerId=5] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,427] INFO [ReplicaStateMachine controllerId=5] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,525] INFO [ReplicaStateMachine controllerId=5] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,612] DEBUG [ReplicaStateMachine controllerId=5] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:08,614] INFO [PartitionStateMachine controllerId=5] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,623] INFO [PartitionStateMachine controllerId=5] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,632] DEBUG [PartitionStateMachine controllerId=5] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:08,633] INFO [Controller id=5] Ready to serve as the new controller with epoch 17 (kafka.controller.KafkaController)
[2020-04-16 11:49:08,643] INFO [Controller id=5] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,643] INFO [Controller id=5] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,644] INFO [Controller id=5] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,645] INFO [Controller id=5] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:49:08,647] INFO [Controller id=5] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:08,667] INFO [Controller id=5] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:49:11,123] INFO [Controller id=5] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:49:11,124] DEBUG [Controller id=5] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-04-16 11:49:11,126] DEBUG [Controller id=5] Live brokers: 5 (kafka.controller.KafkaController)
[2020-04-16 11:49:11,176] TRACE [Controller id=5] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17) (kafka.controller.KafkaController)
[2020-04-16 11:49:11,182] INFO [Controller id=5] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:49:11,182] DEBUG [Controller id=5] All shutting down brokers: 5,2 (kafka.controller.KafkaController)
[2020-04-16 11:49:11,182] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:49:11,183] TRACE [Controller id=5] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),BatchTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),AlarmTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),ReportTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),BatchTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),AlarmTopic-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17),ReportTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),BatchTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:17),AlarmTopic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:17) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,139] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:12,141] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:12,141] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:12,142] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:12,143] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set(2, 5) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,145] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:12,148] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:12,149] INFO [RequestSendThread controllerId=5] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,149] INFO [RequestSendThread controllerId=5] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,149] INFO [RequestSendThread controllerId=5] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,152] INFO [RequestSendThread controllerId=5] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,152] INFO [RequestSendThread controllerId=5] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,152] INFO [RequestSendThread controllerId=5] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,156] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:49:12,171] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 18 and epoch zk version is now 18 (kafka.controller.KafkaController)
[2020-04-16 11:49:12,172] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:49:12,176] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:12,181] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:49:12,184] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:49:12,190] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 1476) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,203] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,225] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:49:12,236] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,236] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,237] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:49:12,237] INFO [Controller id=2] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:49:12,238] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:49:12,248] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:49:12,248] INFO [Controller id=2] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:49:12,249] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:49:12,250] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:49:12,250] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:49:12,264] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:12,264] INFO [RequestSendThread controllerId=2] Controller 2 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:49:12,273] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:12,311] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:12,367] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:12,369] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:12,375] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:12,380] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:12,380] INFO [Controller id=2] Ready to serve as the new controller with epoch 18 (kafka.controller.KafkaController)
[2020-04-16 11:49:12,389] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:12,391] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:49:12,392] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:49:12,393] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:49:12,395] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:12,415] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:49:17,418] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:49:17,419] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:49:17,429] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:49:17,441] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-16 11:49:17,443] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:49:17,444] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)) (kafka.controller.KafkaController)
[2020-04-16 11:49:17,444] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:49:17,447] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:17,447] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:49:17,447] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:49:17,448] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:49:17,473] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:17,477] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:17,482] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:49:17,486] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:49:17,488] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-16 11:49:17,494] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:49:17,505] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:49:17,507] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:49:17,508] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:49:17,509] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:49:17,531] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:50:25,488] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-16 11:50:35,052] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:50:35,218] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 19 and epoch zk version is now 19 (kafka.controller.KafkaController)
[2020-04-16 11:50:35,220] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:50:35,240] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:50:35,276] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:50:35,299] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:50:35,386] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 1708) (kafka.controller.KafkaController)
[2020-04-16 11:50:35,455] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-16 11:50:35,637] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:50:35,690] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-16 11:50:35,691] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:50:35,692] INFO [Controller id=0] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:50:35,693] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:50:35,699] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:50:35,714] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:50:35,715] INFO [Controller id=0] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:50:35,716] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:50:35,718] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:50:35,719] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:50:35,748] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:50:35,795] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:50:35,851] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:50:36,055] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:50:36,579] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:50:36,580] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:50:36,619] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:50:37,245] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(ReportTopic-2 -> OfflinePartition, BatchTopic-2 -> OfflinePartition, AlarmTopic-2 -> OfflinePartition, ReportTopic-1 -> OfflinePartition, BatchTopic-1 -> OfflinePartition, AlarmTopic-1 -> OfflinePartition, ReportTopic-0 -> OfflinePartition, BatchTopic-0 -> OfflinePartition, AlarmTopic-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:50:37,246] INFO [Controller id=0] Ready to serve as the new controller with epoch 19 (kafka.controller.KafkaController)
[2020-04-16 11:50:37,294] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:50:37,305] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:50:37,306] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:50:37,307] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:50:37,321] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:50:37,393] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:50:42,404] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:50:42,407] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:50:42,465] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)), 0 -> Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-16 11:50:42,479] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(ReportTopic-2 -> Vector(2, 1, 0), AlarmTopic-1 -> Vector(2, 1, 0), BatchTopic-2 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:50:42,497] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:50:42,498] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:50:42,499] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map(ReportTopic-0 -> Vector(1, 0, 2), BatchTopic-0 -> Vector(1, 2, 0), AlarmTopic-2 -> Vector(1, 0, 2)) (kafka.controller.KafkaController)
[2020-04-16 11:50:42,499] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:50:42,499] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:50:42,499] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map(AlarmTopic-0 -> Vector(0, 2, 1), BatchTopic-1 -> Vector(0, 1, 2), ReportTopic-1 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-16 11:50:42,499] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:50:42,500] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions AlarmTopic-0,BatchTopic-1,ReportTopic-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:50:42,529] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition ReportTopic-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition ReportTopic-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:50:42,533] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition BatchTopic-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition BatchTopic-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:50:42,533] ERROR [Controller id=0] Error completing replica leader election (PREFERRED) for partition AlarmTopic-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition AlarmTopic-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:764)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$6(KafkaController.scala:1135)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1116)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1144)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:50:42,538] WARN [Controller id=0] Partition AlarmTopic-0 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-04-16 11:50:42,539] WARN [Controller id=0] Partition BatchTopic-1 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-04-16 11:50:42,539] WARN [Controller id=0] Partition ReportTopic-1 failed to complete preferred replica leader election to 0. Leader is still -1 (kafka.controller.KafkaController)
[2020-04-16 11:50:44,441] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-04-16 11:50:44,446] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:50:44,477] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:50:44,498] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-04-16 11:50:44,553] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:50:44,882] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-16 11:50:44,904] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 1 -> 1735) (kafka.controller.KafkaController)
[2020-04-16 11:50:45,124] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:50:45,232] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:50:50,119] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-16 11:50:50,120] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:50:50,228] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-16 11:50:50,230] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:50:50,291] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:50:50,611] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-16 11:50:50,622] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 1 -> 1735, 2 -> 1751) (kafka.controller.KafkaController)
[2020-04-16 11:50:50,766] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:50:50,937] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:51:02,342] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(ReportTopic-2, AlarmTopic-0, AlarmTopic-1, ReportTopic-0, BatchTopic-0, AlarmTopic-2, BatchTopic-2, BatchTopic-1, ReportTopic-1) (kafka.controller.KafkaController)
[2020-04-16 11:51:02,465] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2020-04-16 11:51:02,465] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:51:02,540] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2020-04-16 11:51:02,554] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2020-04-16 11:51:02,560] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:51:02,560] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 1 -> 1735, 2 -> 1751, 3 -> 1797) (kafka.controller.KafkaController)
[2020-04-16 11:51:02,562] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:51:03,270] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:51:03,419] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:51:08,802] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:51:08,803] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:51:08,821] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2020-04-16 11:51:08,855] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(4) (kafka.controller.KafkaController)
[2020-04-16 11:51:08,875] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:51:08,877] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 1 -> 1735, 2 -> 1751, 3 -> 1797, 4 -> 1826) (kafka.controller.KafkaController)
[2020-04-16 11:51:08,880] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:51:09,372] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:51:09,532] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:51:17,868] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2020-04-16 11:51:17,868] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:51:17,905] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2020-04-16 11:51:17,918] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(5) (kafka.controller.KafkaController)
[2020-04-16 11:51:17,932] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:51:17,933] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:51:17,939] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 5 -> 1842, 1 -> 1735, 2 -> 1751, 3 -> 1797, 4 -> 1826) (kafka.controller.KafkaController)
[2020-04-16 11:51:18,456] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:51:18,626] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:51:22,934] INFO [Controller id=0] Newly added brokers: 6, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5,6 (kafka.controller.KafkaController)
[2020-04-16 11:51:22,934] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:51:22,952] INFO [Controller id=0] New broker startup callback for 6 (kafka.controller.KafkaController)
[2020-04-16 11:51:22,964] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:51:23,029] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9098 (id: 6 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:51:23,034] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(6) (kafka.controller.KafkaController)
[2020-04-16 11:51:23,041] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 5 -> 1842, 1 -> 1735, 6 -> 1858, 2 -> 1751, 3 -> 1797, 4 -> 1826) (kafka.controller.KafkaController)
[2020-04-16 11:51:23,325] INFO [ControllerEventThread controllerId=6] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:51:23,399] DEBUG [Controller id=6] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:51:25,761] INFO [Controller id=0] Newly added brokers: 7, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:51:25,762] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:51:25,771] INFO [Controller id=0] New broker startup callback for 7 (kafka.controller.KafkaController)
[2020-04-16 11:51:25,772] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:51:25,775] INFO [RequestSendThread controllerId=0] Controller 0 connected to bumblebee:9099 (id: 7 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:51:25,796] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(7) (kafka.controller.KafkaController)
[2020-04-16 11:51:25,798] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1708, 5 -> 1842, 1 -> 1735, 6 -> 1858, 2 -> 1751, 7 -> 1860, 3 -> 1797, 4 -> 1826) (kafka.controller.KafkaController)
[2020-04-16 11:51:25,982] INFO [ControllerEventThread controllerId=7] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:51:26,007] DEBUG [Controller id=7] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:53:05,126] DEBUG [Controller id=0] Delete topics listener fired for topics AlarmTopic to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:53:05,128] INFO [Controller id=0] Starting topic deletion for topics AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:53:05,132] INFO [Topic Deletion Manager 0] Handling deletion for topics AlarmTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,138] INFO [Topic Deletion Manager 0] Deletion of topic AlarmTopic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,140] INFO [Topic Deletion Manager 0] Topic deletion callback for AlarmTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,196] INFO [Topic Deletion Manager 0] Partition deletion callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,325] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,329] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,329] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,331] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=AlarmTopic,Partition=2,Replica=0],[Topic=AlarmTopic,Partition=0,Replica=0],[Topic=AlarmTopic,Partition=0,Replica=1],[Topic=AlarmTopic,Partition=1,Replica=2],[Topic=AlarmTopic,Partition=2,Replica=1],[Topic=AlarmTopic,Partition=1,Replica=1],[Topic=AlarmTopic,Partition=2,Replica=2],[Topic=AlarmTopic,Partition=0,Replica=2],[Topic=AlarmTopic,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,348] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,349] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=1],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,369] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:05,431] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(AlarmTopic-2 -> NONE, AlarmTopic-1 -> NONE, AlarmTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:05,437] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=AlarmTopic,Partition=2,Replica=0],[Topic=AlarmTopic,Partition=1,Replica=0],[Topic=AlarmTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,439] INFO [Topic Deletion Manager 0] Handling deletion for topics AlarmTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,495] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(AlarmTopic-2 -> NONE, AlarmTopic-1 -> NONE, AlarmTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:05,496] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=AlarmTopic,Partition=2,Replica=1],[Topic=AlarmTopic,Partition=1,Replica=1],[Topic=AlarmTopic,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,497] INFO [Topic Deletion Manager 0] Handling deletion for topics AlarmTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,519] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(AlarmTopic-2 -> NONE, AlarmTopic-1 -> NONE, AlarmTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:05,520] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=AlarmTopic,Partition=2,Replica=2],[Topic=AlarmTopic,Partition=1,Replica=2],[Topic=AlarmTopic,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,521] INFO [Topic Deletion Manager 0] Handling deletion for topics AlarmTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,583] INFO [Topic Deletion Manager 0] Deletion of topic AlarmTopic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:05,590] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-16 11:53:05,594] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:53:33,256] DEBUG [Controller id=0] Delete topics listener fired for topics BatchTopic to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:53:33,256] INFO [Controller id=0] Starting topic deletion for topics BatchTopic (kafka.controller.KafkaController)
[2020-04-16 11:53:33,256] INFO [Topic Deletion Manager 0] Handling deletion for topics BatchTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,258] INFO [Topic Deletion Manager 0] Deletion of topic BatchTopic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,258] INFO [Topic Deletion Manager 0] Topic deletion callback for BatchTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,262] INFO [Topic Deletion Manager 0] Partition deletion callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,371] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,371] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,371] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,371] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=BatchTopic,Partition=1,Replica=2],[Topic=BatchTopic,Partition=1,Replica=1],[Topic=BatchTopic,Partition=0,Replica=1],[Topic=BatchTopic,Partition=0,Replica=0],[Topic=BatchTopic,Partition=0,Replica=2],[Topic=BatchTopic,Partition=1,Replica=0],[Topic=BatchTopic,Partition=2,Replica=1],[Topic=BatchTopic,Partition=2,Replica=2],[Topic=BatchTopic,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,394] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=2],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=2],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,394] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,395] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:33,470] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(BatchTopic-2 -> NONE, BatchTopic-1 -> NONE, BatchTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:33,470] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=BatchTopic,Partition=2,Replica=0],[Topic=BatchTopic,Partition=1,Replica=0],[Topic=BatchTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,471] INFO [Topic Deletion Manager 0] Handling deletion for topics BatchTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,499] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(BatchTopic-2 -> NONE, BatchTopic-1 -> NONE, BatchTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:33,500] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=BatchTopic,Partition=2,Replica=1],[Topic=BatchTopic,Partition=1,Replica=1],[Topic=BatchTopic,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,500] INFO [Topic Deletion Manager 0] Handling deletion for topics BatchTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,516] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(BatchTopic-2 -> NONE, BatchTopic-1 -> NONE, BatchTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:33,516] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=BatchTopic,Partition=2,Replica=2],[Topic=BatchTopic,Partition=1,Replica=2],[Topic=BatchTopic,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,517] INFO [Topic Deletion Manager 0] Handling deletion for topics BatchTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,595] INFO [Topic Deletion Manager 0] Deletion of topic BatchTopic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:33,609] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-16 11:53:33,613] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:53:44,061] DEBUG [Controller id=0] Delete topics listener fired for topics ReportTopic to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:53:44,061] INFO [Controller id=0] Starting topic deletion for topics ReportTopic (kafka.controller.KafkaController)
[2020-04-16 11:53:44,061] INFO [Topic Deletion Manager 0] Handling deletion for topics ReportTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,064] INFO [Topic Deletion Manager 0] Deletion of topic ReportTopic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,064] INFO [Topic Deletion Manager 0] Topic deletion callback for ReportTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,103] INFO [Topic Deletion Manager 0] Partition deletion callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,176] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,177] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,177] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,181] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=ReportTopic,Partition=1,Replica=2],[Topic=ReportTopic,Partition=2,Replica=2],[Topic=ReportTopic,Partition=1,Replica=0],[Topic=ReportTopic,Partition=2,Replica=0],[Topic=ReportTopic,Partition=1,Replica=1],[Topic=ReportTopic,Partition=0,Replica=2],[Topic=ReportTopic,Partition=0,Replica=1],[Topic=ReportTopic,Partition=0,Replica=0],[Topic=ReportTopic,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,216] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=2],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,230] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,243] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:53:44,273] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(ReportTopic-2 -> NONE, ReportTopic-1 -> NONE, ReportTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:44,274] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=ReportTopic,Partition=2,Replica=2],[Topic=ReportTopic,Partition=1,Replica=2],[Topic=ReportTopic,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,275] INFO [Topic Deletion Manager 0] Handling deletion for topics ReportTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,277] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(ReportTopic-2 -> NONE, ReportTopic-1 -> NONE, ReportTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:44,277] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=ReportTopic,Partition=2,Replica=0],[Topic=ReportTopic,Partition=1,Replica=0],[Topic=ReportTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,277] INFO [Topic Deletion Manager 0] Handling deletion for topics ReportTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,278] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(ReportTopic-2 -> NONE, ReportTopic-1 -> NONE, ReportTopic-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-16 11:53:44,279] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=ReportTopic,Partition=2,Replica=1],[Topic=ReportTopic,Partition=1,Replica=1],[Topic=ReportTopic,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,279] INFO [Topic Deletion Manager 0] Handling deletion for topics ReportTopic (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,309] INFO [Topic Deletion Manager 0] Deletion of topic ReportTopic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-16 11:53:44,311] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-16 11:53:44,315] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-16 11:54:43,869] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=7,1,6, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=6,4,1, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:54:43,871] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:54:50,536] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=5,2,3, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=0,7,2, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=3,6,7, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:54:50,536] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:54:57,105] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=3,7,2, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=2,6,7, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=7,1,6, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-16 11:54:57,106] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,539] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:55:42,540] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:55:42,541] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(ReportTopic-1 -> Vector(0, 7, 2)), 5 -> Map(ReportTopic-2 -> Vector(5, 2, 3)), 1 -> Map(BatchTopic-0 -> Vector(1, 5, 4)), 6 -> Map(BatchTopic-1 -> Vector(6, 4, 1)), 2 -> Map(AlarmTopic-1 -> Vector(2, 6, 7)), 7 -> Map(AlarmTopic-0 -> Vector(7, 1, 6), BatchTopic-2 -> Vector(7, 1, 6)), 3 -> Map(ReportTopic-0 -> Vector(3, 6, 7), AlarmTopic-2 -> Vector(3, 7, 2))) (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 6 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] TRACE [Controller id=0] Leader imbalance ratio for broker 6 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 7 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,543] TRACE [Controller id=0] Leader imbalance ratio for broker 7 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:55:42,543] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-16 11:55:42,543] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,537] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,538] DEBUG [Controller id=0] All shutting down brokers: 3 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,546] DEBUG [Controller id=0] Live brokers: 0,5,1,6,2,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,670] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,725] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,727] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:5,ISR:5,2,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,1,6,LeaderEpoch:0,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:0,ISR:0,7,2,LeaderEpoch:0,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,4,1,LeaderEpoch:0,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,6,7,LeaderEpoch:0,ControllerEpoch:19),ReportTopic-0 -> (Leader:6,ISR:6,7,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-0 -> (Leader:1,ISR:1,5,4,LeaderEpoch:0,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,1,6,LeaderEpoch:0,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:49,734] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,734] DEBUG [Controller id=0] All shutting down brokers: 1,3 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,740] DEBUG [Controller id=0] Live brokers: 0,5,6,2,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,778] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,819] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=19, brokerEpoch=1797, partitionStates=[UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=2, controllerEpoch=19, leader=5, leaderEpoch=1, isr=[5, 2], zkVersion=1, replicas=[5, 2, 3], offlineReplicas=[3])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:257)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:49,845] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,845] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:5,ISR:5,2,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:0,ISR:0,7,2,LeaderEpoch:0,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,4,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,6,7,LeaderEpoch:0,ControllerEpoch:19),ReportTopic-0 -> (Leader:6,ISR:6,7,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,4,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:49,846] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,846] DEBUG [Controller id=0] All shutting down brokers: 1,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,846] DEBUG [Controller id=0] Live brokers: 0,5,6,2,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,848] DEBUG The stop replica request (delete = false) sent to broker 4 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=4],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=4],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,881] DEBUG The stop replica request (delete = false) sent to broker 4 is StopReplicaRequestInfo([Topic=BatchTopic,Partition=1,Replica=4],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=0,Replica=4],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:49,887] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:5,ISR:5,2,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:0,ISR:0,7,2,LeaderEpoch:0,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,6,7,LeaderEpoch:0,ControllerEpoch:19),ReportTopic-0 -> (Leader:6,ISR:6,7,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:49,888] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,888] DEBUG [Controller id=0] All shutting down brokers: 1,5,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,888] DEBUG [Controller id=0] Live brokers: 0,6,2,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,935] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:0,ISR:0,7,2,LeaderEpoch:0,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,6,7,LeaderEpoch:0,ControllerEpoch:19),ReportTopic-0 -> (Leader:6,ISR:6,7,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:49,962] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,962] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,964] DEBUG [Controller id=0] Live brokers: 6,2,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:49,965] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,041] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,6,7,LeaderEpoch:0,ControllerEpoch:19),ReportTopic-0 -> (Leader:6,ISR:6,7,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,6,LeaderEpoch:1,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:50,042] INFO [Controller id=0] Shutting down broker 6 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,042] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,6,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,042] DEBUG [Controller id=0] Live brokers: 2,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,090] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,092] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=19, deletePartitions=false, brokerEpoch=1826, partitions=BatchTopic-1,BatchTopic-0) to broker bumblebee:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 4 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:257)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,131] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=19, brokerEpoch=1708, partitionStates=[LeaderAndIsrPartitionState(topicName='ReportTopic', partitionIndex=1, controllerEpoch=19, leader=7, leaderEpoch=1, isr=[7, 2], zkVersion=1, replicas=[0, 7, 2], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(bumblebee:9099 (id: 7 rack: null))) to broker bumblebee:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:257)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,138] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=19, deletePartitions=false, brokerEpoch=1735, partitions=BatchTopic-2,BatchTopic-1,AlarmTopic-0) to broker bumblebee:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:257)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,174] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:50,195] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,205] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,239] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,242] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,247] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:50,247] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-1 -> (Leader:7,ISR:7,2,LeaderEpoch:1,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:2,ISR:2,7,LeaderEpoch:1,ControllerEpoch:19),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:50,248] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,248] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,2,6,3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,248] DEBUG [Controller id=0] Live brokers: 7 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,299] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,306] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,317] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:50,341] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,343] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,356] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:50,357] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:50,359] INFO [Controller id=0] Shutting down broker 7 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,365] DEBUG [Controller id=0] All shutting down brokers: 0,1,5,2,6,3,7,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:50,366] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:56:50,402] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,409] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,409] TRACE [Controller id=0] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:19),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19) (kafka.controller.KafkaController)
[2020-04-16 11:56:50,442] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,444] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,509] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,511] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,544] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,546] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,611] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,612] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,645] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,648] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,712] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,713] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,746] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,749] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,814] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,814] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,848] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,851] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,915] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,917] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,949] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:50,953] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,010] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,016] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,019] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,019] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,020] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:56:51,026] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 5, 4, 7, 1, 3, 6, 0) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,029] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,032] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,035] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,039] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,042] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,043] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,047] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,050] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,052] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,053] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,054] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker bumblebee:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,066] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,066] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,066] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,068] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,072] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,073] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,074] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,079] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,079] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=19, deletePartitions=false, brokerEpoch=1735, partitions=BatchTopic-2,BatchTopic-1,AlarmTopic-0) to broker bumblebee:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,079] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,079] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,080] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,086] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,087] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=19, brokerEpoch=1797, partitionStates=[UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=2, controllerEpoch=19, leader=5, leaderEpoch=1, isr=[5, 2], zkVersion=1, replicas=[5, 2, 3], offlineReplicas=[3])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,087] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,087] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,091] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,094] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,094] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,095] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,102] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,102] WARN [RequestSendThread controllerId=0] Controller 0 epoch 19 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=19, brokerEpoch=1708, partitionStates=[LeaderAndIsrPartitionState(topicName='ReportTopic', partitionIndex=1, controllerEpoch=19, leader=7, leaderEpoch=1, isr=[7, 2], zkVersion=1, replicas=[0, 7, 2], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(bumblebee:9099 (id: 7 rack: null))) to broker bumblebee:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,103] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,103] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,103] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,113] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:56:51,161] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 20 and epoch zk version is now 20 (kafka.controller.KafkaController)
[2020-04-16 11:56:51,162] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:56:51,170] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:56:51,173] DEBUG [Controller id=7] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-16 11:56:51,195] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:56:51,204] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:56:51,205] DEBUG [Controller id=6] Broker 1 was elected as controller instead of broker 6 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,213] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:56:51,222] DEBUG [Controller id=3] Broker 1 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,224] DEBUG [Controller id=5] Broker 1 was elected as controller instead of broker 5 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,265] DEBUG [Controller id=4] Broker 1 was elected as controller instead of broker 4 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,282] INFO [Controller id=1] Initialized broker epochs cache: Map(5 -> 1842, 1 -> 1735, 6 -> 1858, 2 -> 1751, 7 -> 1860, 3 -> 1797, 4 -> 1826) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,300] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,302] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,303] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,304] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:56:51,305] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:56:51,309] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,314] DEBUG [Controller id=1] Register BrokerModifications handler for Set(5, 1, 6, 2, 7, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,326] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,339] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:56:51,376] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,398] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,410] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,414] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,419] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,421] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,426] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:56:51,428] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:56:51,425] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,441] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,444] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,448] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,452] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,457] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:56:51,462] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:51,469] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,475] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,475] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,475] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,475] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,475] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,476] INFO [Controller id=1] Currently active brokers in the cluster: Set(5, 1, 6, 2, 7, 3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,476] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:56:51,477] INFO [Controller id=1] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,478] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:56:51,478] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,487] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:56:51,487] INFO [Controller id=1] List of topics ineligible for deletion: ReportTopic (kafka.controller.KafkaController)
[2020-04-16 11:56:51,488] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:56:51,489] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:56:51,489] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:56:51,507] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,509] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,511] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9099 (id: 7 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,511] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,512] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9098 (id: 6 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,516] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,518] INFO [RequestSendThread controllerId=1] Controller 1 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,521] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,531] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,613] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,622] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,624] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,627] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,666] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=2,Replica=7] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=6] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=4] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=4] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=3] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=5] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=3] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=5] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=6] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=3] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=7] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,667] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,683] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,687] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,687] INFO [Controller id=1] Ready to serve as the new controller with epoch 20 (kafka.controller.KafkaController)
[2020-04-16 11:56:51,697] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:56:51,698] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:56:51,698] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:56:51,699] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:56:51,701] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:51,718] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:56:51,724] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,728] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,728] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,759] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,769] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3,4, bounced brokers: , all live brokers: 1,2,5,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:51,773] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,773] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,774] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,774] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,782] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,782] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,782] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,783] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,790] INFO [Controller id=1] Broker failure callback for 3,4 (kafka.controller.KafkaController)
[2020-04-16 11:56:51,826] DEBUG [Controller id=1] Unregister BrokerModifications handler for Vector(3, 4) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,835] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker bumblebee:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,836] INFO [Controller id=1] Updated broker epochs cache: Map(5 -> 1842, 1 -> 1735, 6 -> 1858, 2 -> 1751, 7 -> 1860) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,841] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,841] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:56:51,842] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:56:51,843] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 5, 7, 1, 6) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,846] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:51,849] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:51,850] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,850] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,850] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,852] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,852] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,852] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,855] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,855] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,855] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,870] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,872] WARN [RequestSendThread controllerId=1] Controller 1 epoch 20 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=20, brokerEpoch=1735, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=6, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9098, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:56:51,873] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,873] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,873] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,875] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,877] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,878] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:56:51,883] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:56:51,917] INFO [Controller id=6] 6 successfully elected as the controller. Epoch incremented to 21 and epoch zk version is now 21 (kafka.controller.KafkaController)
[2020-04-16 11:56:51,918] INFO [Controller id=6] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:56:51,925] INFO [Controller id=6] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:56:51,932] INFO [Controller id=6] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:56:51,934] DEBUG [Controller id=5] Broker 6 was elected as controller instead of broker 5 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,937] INFO [Controller id=6] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:56:51,949] DEBUG [Controller id=2] Broker 6 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,951] INFO [Controller id=6] Initialized broker epochs cache: Map(2 -> 1751, 5 -> 1842, 6 -> 1858, 7 -> 1860) (kafka.controller.KafkaController)
[2020-04-16 11:56:51,962] DEBUG [Controller id=7] Broker 6 was elected as controller instead of broker 7 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:56:51,985] DEBUG [Controller id=6] Register BrokerModifications handler for Set(2, 5, 6, 7) (kafka.controller.KafkaController)
[2020-04-16 11:56:52,052] DEBUG [Channel manager on controller 6]: Controller 6 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:52,063] DEBUG [Channel manager on controller 6]: Controller 6 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:52,066] DEBUG [Channel manager on controller 6]: Controller 6 trying to connect to broker 6 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:52,070] DEBUG [Channel manager on controller 6]: Controller 6 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:56:52,076] INFO [RequestSendThread controllerId=6] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,078] INFO [RequestSendThread controllerId=6] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,079] INFO [Controller id=6] Currently active brokers in the cluster: Set(2, 5, 6, 7) (kafka.controller.KafkaController)
[2020-04-16 11:56:52,080] INFO [Controller id=6] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:56:52,081] INFO [Controller id=6] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:56:52,082] INFO [Controller id=6] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:56:52,082] INFO [RequestSendThread controllerId=6] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,082] INFO [RequestSendThread controllerId=6] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,094] INFO [Controller id=6] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:56:52,094] INFO [Controller id=6] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:56:52,095] INFO [Controller id=6] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:56:52,096] INFO [Topic Deletion Manager 6] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:56:52,096] INFO [Controller id=6] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:56:52,121] INFO [RequestSendThread controllerId=6] Controller 6 connected to bumblebee:9098 (id: 6 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,121] INFO [ReplicaStateMachine controllerId=6] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:52,127] INFO [RequestSendThread controllerId=6] Controller 6 connected to bumblebee:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,129] INFO [RequestSendThread controllerId=6] Controller 6 connected to bumblebee:9099 (id: 7 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,129] INFO [RequestSendThread controllerId=6] Controller 6 connected to bumblebee:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-16 11:56:52,144] INFO [ReplicaStateMachine controllerId=6] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:52,196] INFO [ReplicaStateMachine controllerId=6] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:52,293] DEBUG [ReplicaStateMachine controllerId=6] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=2,Replica=7] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=6] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=4] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=4] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=3] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=5] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=3] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=6] -> OnlineReplica, [Topic=ReportTopic,Partition=2,Replica=5] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=6] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=3] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=7] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:56:52,294] INFO [PartitionStateMachine controllerId=6] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:52,310] INFO [PartitionStateMachine controllerId=6] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:52,314] DEBUG [PartitionStateMachine controllerId=6] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OnlinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:56:52,315] INFO [Controller id=6] Ready to serve as the new controller with epoch 21 (kafka.controller.KafkaController)
[2020-04-16 11:56:52,322] INFO [Controller id=6] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:56:52,322] INFO [Controller id=6] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:56:52,323] INFO [Controller id=6] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:56:52,323] INFO [Controller id=6] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:56:52,325] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:52,336] INFO [Controller id=6] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:56:54,967] INFO [Controller id=6] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:56:54,968] DEBUG [Controller id=6] All shutting down brokers: 5 (kafka.controller.KafkaController)
[2020-04-16 11:56:54,968] DEBUG [Controller id=6] Live brokers: 2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,020] DEBUG The stop replica request (delete = false) sent to broker 5 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=5],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,038] DEBUG The stop replica request (delete = false) sent to broker 5 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=5],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,039] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:19),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:56:55,167] INFO [Controller id=6] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,167] DEBUG [Controller id=6] All shutting down brokers: 5,2 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,167] DEBUG [Controller id=6] Live brokers: 6,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,172] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,186] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,187] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:56:55,192] INFO [Controller id=6] Shutting down broker 7 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,192] DEBUG [Controller id=6] All shutting down brokers: 5,2,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,192] DEBUG [Controller id=6] Live brokers: 6 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,203] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:56:55,205] INFO [Controller id=6] Shutting down broker 6 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,205] DEBUG [Controller id=6] All shutting down brokers: 5,2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:56:55,205] DEBUG [Controller id=6] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:56:55,210] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,222] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:56:55,222] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,339] INFO [Controller id=6] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-16 11:56:57,340] TRACE [Controller id=6] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-16 11:56:57,347] DEBUG [Controller id=6] Preferred replicas by broker Map(0 -> Map(ReportTopic-1 -> Vector(0, 7, 2)), 5 -> Map(ReportTopic-2 -> Vector(5, 2, 3)), 1 -> Map(BatchTopic-0 -> Vector(1, 5, 4)), 6 -> Map(BatchTopic-1 -> Vector(6, 4, 1)), 2 -> Map(AlarmTopic-1 -> Vector(2, 6, 7)), 7 -> Map(AlarmTopic-0 -> Vector(7, 1, 6), BatchTopic-2 -> Vector(7, 1, 6)), 3 -> Map(ReportTopic-0 -> Vector(3, 6, 7), AlarmTopic-2 -> Vector(3, 7, 2))) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,350] DEBUG [Controller id=6] Topics not in preferred replica for broker 0 Map(ReportTopic-1 -> Vector(0, 7, 2)) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,351] TRACE [Controller id=6] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,352] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] DEBUG [Controller id=6] Topics not in preferred replica for broker 5 Map(ReportTopic-2 -> Vector(5, 2, 3)) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] TRACE [Controller id=6] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] DEBUG [Controller id=6] Topics not in preferred replica for broker 1 Map(BatchTopic-0 -> Vector(1, 5, 4)) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] TRACE [Controller id=6] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:57,353] DEBUG [Controller id=6] Topics not in preferred replica for broker 6 Map() (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] TRACE [Controller id=6] Leader imbalance ratio for broker 6 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] DEBUG [Controller id=6] Topics not in preferred replica for broker 2 Map(AlarmTopic-1 -> Vector(2, 6, 7)) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] TRACE [Controller id=6] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] DEBUG [Controller id=6] Topics not in preferred replica for broker 7 Map() (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] TRACE [Controller id=6] Leader imbalance ratio for broker 7 is 0.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] DEBUG [Controller id=6] Topics not in preferred replica for broker 3 Map(ReportTopic-0 -> Vector(3, 6, 7), AlarmTopic-2 -> Vector(3, 7, 2)) (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] TRACE [Controller id=6] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2020-04-16 11:56:57,354] INFO [Controller id=6] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-04-16 11:57:00,050] INFO [Controller id=6] Shutting down broker 5 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,050] DEBUG [Controller id=6] All shutting down brokers: 5,2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,050] DEBUG [Controller id=6] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:57:00,056] DEBUG The stop replica request (delete = false) sent to broker 5 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=5],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,068] DEBUG The stop replica request (delete = false) sent to broker 5 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=2,Replica=5],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,068] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:57:00,201] INFO [Controller id=6] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,201] DEBUG [Controller id=6] All shutting down brokers: 5,2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,201] DEBUG [Controller id=6] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:57:00,205] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,215] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ReportTopic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=2,Replica=2],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,216] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:57:00,221] INFO [Controller id=6] Shutting down broker 7 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,221] DEBUG [Controller id=6] All shutting down brokers: 5,2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,221] DEBUG [Controller id=6] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:57:00,236] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:57:00,244] INFO [Controller id=6] Shutting down broker 6 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,244] DEBUG [Controller id=6] All shutting down brokers: 5,2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:57:00,244] DEBUG [Controller id=6] Live brokers:  (kafka.controller.KafkaController)
[2020-04-16 11:57:00,249] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,272] DEBUG The stop replica request (delete = false) sent to broker 6 is StopReplicaRequestInfo([Topic=AlarmTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=AlarmTopic,Partition=1,Replica=6],false),StopReplicaRequestInfo([Topic=ReportTopic,Partition=0,Replica=6],false),StopReplicaRequestInfo([Topic=BatchTopic,Partition=2,Replica=6],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-16 11:57:00,273] TRACE [Controller id=6] All leaders = ReportTopic-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-2 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-1 -> (Leader:6,ISR:6,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-1 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),ReportTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21),BatchTopic-0 -> (Leader:5,ISR:5,LeaderEpoch:2,ControllerEpoch:21),AlarmTopic-0 -> (Leader:7,ISR:7,LeaderEpoch:2,ControllerEpoch:21) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,233] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,235] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,235] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,237] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:57:06,237] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:57:06,240] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:06,242] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:06,246] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:57:06,265] INFO [Controller id=6] Newly added brokers: , deleted brokers: 5, bounced brokers: , all live brokers: 2,6,7 (kafka.controller.KafkaController)
[2020-04-16 11:57:06,270] INFO [RequestSendThread controllerId=6] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,270] INFO [RequestSendThread controllerId=6] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,271] INFO [RequestSendThread controllerId=6] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,291] INFO [Controller id=6] Broker failure callback for 5 (kafka.controller.KafkaController)
[2020-04-16 11:57:06,294] INFO [Controller id=6] Removed 5 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-04-16 11:57:06,372] DEBUG [Controller id=6] Unregister BrokerModifications handler for Vector(5) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,382] WARN [RequestSendThread controllerId=6] Controller 6's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,378] WARN [RequestSendThread controllerId=6] Controller 6's connection to broker bumblebee:9098 (id: 6 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9098 (id: 6 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,376] WARN [RequestSendThread controllerId=6] Controller 6's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,383] INFO [Controller id=6] Updated broker epochs cache: Map(2 -> 1751, 6 -> 1858, 7 -> 1860) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,432] INFO [ControllerEventThread controllerId=6] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,436] INFO [ControllerEventThread controllerId=6] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,437] INFO [ControllerEventThread controllerId=6] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,438] DEBUG [Controller id=6] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:57:06,438] DEBUG [Controller id=6] Unregister BrokerModifications handler for Set(2, 7, 6) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,440] INFO [PartitionStateMachine controllerId=6] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:06,443] INFO [ReplicaStateMachine controllerId=6] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:06,444] INFO [RequestSendThread controllerId=6] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,444] TRACE [RequestSendThread controllerId=6] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,444] INFO [RequestSendThread controllerId=6] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,446] INFO [RequestSendThread controllerId=6] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,449] INFO [RequestSendThread controllerId=6] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,449] TRACE [RequestSendThread controllerId=6] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,449] INFO [RequestSendThread controllerId=6] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,450] INFO [RequestSendThread controllerId=6] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,456] INFO [RequestSendThread controllerId=6] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,456] TRACE [RequestSendThread controllerId=6] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,456] INFO [RequestSendThread controllerId=6] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,456] INFO [RequestSendThread controllerId=6] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,460] INFO [Controller id=6] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:57:06,485] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 22 and epoch zk version is now 22 (kafka.controller.KafkaController)
[2020-04-16 11:57:06,486] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-16 11:57:06,492] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-16 11:57:06,498] DEBUG [Controller id=7] Broker 2 was elected as controller instead of broker 7 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-16 11:57:06,501] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,502] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-16 11:57:06,505] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-16 11:57:06,514] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 1751, 7 -> 1860) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,543] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2, 7) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,586] INFO [ControllerEventThread controllerId=7] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,595] INFO [ControllerEventThread controllerId=7] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,595] INFO [ControllerEventThread controllerId=7] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:06,596] DEBUG [Controller id=7] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:57:06,602] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:57:06,604] DEBUG [Controller id=7] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-16 11:57:06,612] INFO [PartitionStateMachine controllerId=7] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:06,623] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 7 (kafka.controller.ControllerChannelManager)
[2020-04-16 11:57:06,638] INFO [ReplicaStateMachine controllerId=7] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:06,650] INFO [Controller id=7] Resigned (kafka.controller.KafkaController)
[2020-04-16 11:57:06,669] INFO [Controller id=2] Currently active brokers in the cluster: Set(2, 7) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,676] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-16 11:57:06,677] INFO [Controller id=2] Current list of topics in the cluster: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-16 11:57:06,678] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-16 11:57:06,678] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,678] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-16 11:57:06,723] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-16 11:57:06,724] INFO [Controller id=2] List of topics ineligible for deletion: ReportTopic,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-16 11:57:06,736] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-16 11:57:06,738] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-16 11:57:06,739] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-16 11:57:06,823] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:06,854] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,860] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,864] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:06,956] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:06,965] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,063] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,071] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,071] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:07,167] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,173] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,269] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,277] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,319] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=AlarmTopic,Partition=2,Replica=7] -> OnlineReplica, [Topic=AlarmTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=2,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=6] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=6] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=4] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=BatchTopic,Partition=1,Replica=4] -> OfflineReplica, [Topic=ReportTopic,Partition=1,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=1,Replica=1] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=3] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=7] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=6] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=5] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=3] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=6] -> OfflineReplica, [Topic=ReportTopic,Partition=2,Replica=5] -> OfflineReplica, [Topic=AlarmTopic,Partition=1,Replica=6] -> OfflineReplica, [Topic=AlarmTopic,Partition=2,Replica=3] -> OfflineReplica, [Topic=BatchTopic,Partition=2,Replica=7] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:07,321] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:07,345] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:07,372] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,385] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,472] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(ReportTopic-2 -> OnlinePartition, BatchTopic-2 -> OnlinePartition, AlarmTopic-2 -> OnlinePartition, ReportTopic-1 -> OnlinePartition, BatchTopic-1 -> OfflinePartition, AlarmTopic-1 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, BatchTopic-0 -> OfflinePartition, AlarmTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:07,476] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,484] INFO [Controller id=2] Ready to serve as the new controller with epoch 22 (kafka.controller.KafkaController)
[2020-04-16 11:57:07,487] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,520] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:57:07,522] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-16 11:57:07,530] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-16 11:57:07,531] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-16 11:57:07,534] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-16 11:57:07,560] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-16 11:57:07,569] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:07,570] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-16 11:57:07,571] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-16 11:57:07,576] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 7) (kafka.controller.KafkaController)
[2020-04-16 11:57:07,588] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,593] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bumblebee:9099 (id: 7 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bumblebee:9099 (id: 7 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,611] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-16 11:57:07,619] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-16 11:57:07,625] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,628] WARN [RequestSendThread controllerId=2] Controller 2 epoch 22 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=22, brokerEpoch=1751, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,629] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,629] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,629] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,640] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,641] WARN [RequestSendThread controllerId=2] Controller 2 epoch 22 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=22, brokerEpoch=1860, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=7, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9099, host='bumblebee', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker bumblebee:9099 (id: 7 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-16 11:57:07,641] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,641] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,642] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-16 11:57:07,651] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
