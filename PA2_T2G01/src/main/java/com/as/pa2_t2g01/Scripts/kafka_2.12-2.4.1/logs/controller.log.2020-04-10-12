[2020-04-10 12:00:39,730] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 12:01:26,076] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 12:01:28,789] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:28,795] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:28,830] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-04-10 12:01:28,831] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-04-10 12:01:28,847] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-10 12:01:28,859] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-10 12:01:28,858] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-10 12:01:28,871] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-04-10 12:01:28,911] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 251, 2 -> 252) (kafka.controller.KafkaController)
[2020-04-10 12:01:28,925] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 12:01:28,957] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-10 12:01:28,977] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-10 12:01:28,990] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-10 12:01:28,991] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-10 12:01:28,995] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 12:01:28,998] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 12:01:29,000] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 12:01:29,000] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-10 12:01:29,007] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,009] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,012] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-10 12:01:29,014] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-10 12:01:29,014] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-10 12:01:29,053] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:29,059] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:29,065] INFO [RequestSendThread controllerId=1] Controller 1 connected to pop-os.localdomain:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 12:01:29,067] INFO [RequestSendThread controllerId=1] Controller 1 connected to pop-os.localdomain:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 12:01:29,079] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:29,080] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:29,082] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 12:01:29,084] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 12:01:29,091] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 12:01:29,094] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-04-10 12:01:29,115] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,117] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,121] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,123] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-10 12:01:29,136] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-10 12:01:29,157] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-10 12:01:34,159] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-10 12:01:34,160] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-10 12:01:34,164] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-10 12:01:35,546] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-10 12:01:35,548] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-04-10 12:01:35,549] DEBUG [Controller id=1] Live brokers: 2 (kafka.controller.KafkaController)
[2020-04-10 12:01:35,560] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 12:01:35,598] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-10 12:01:35,598] DEBUG [Controller id=1] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-10 12:01:35,598] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-04-10 12:01:35,599] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 12:01:36,618] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,621] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,621] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,621] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,622] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-10 12:01:36,624] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,624] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 12:01:36,625] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-10 12:01:36,627] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-10 12:01:36,627] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2020-04-10 12:01:36,629] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 12:01:36,629] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 12:01:36,630] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:36,630] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 12:01:36,630] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,631] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,631] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,633] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-10 12:01:36,633] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,633] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,633] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 12:01:36,635] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
