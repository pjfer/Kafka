[2020-04-10 11:48:33,072] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:49:28,216] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:49:51,127] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:50:14,621] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:50:16,614] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:50:16,629] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:50:16,651] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-10 11:50:16,652] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-10 11:50:16,664] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-10 11:50:16,673] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-10 11:50:16,676] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-10 11:50:16,682] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-10 11:50:16,705] INFO [Controller id=2] Initialized broker epochs cache: Map(1 -> 46, 2 -> 45) (kafka.controller.KafkaController)
[2020-04-10 11:50:16,714] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:50:16,722] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:50:16,745] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:50:16,751] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:50:16,752] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:50:16,753] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:50:16,753] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:50:16,754] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-10 11:50:16,754] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:50:16,759] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,763] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,765] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-10 11:50:16,767] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-10 11:50:16,769] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-10 11:50:16,798] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:50:16,798] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:50:16,805] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:50:16,806] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:50:16,811] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:50:16,812] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:50:16,814] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:50:16,818] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:50:16,827] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:50:16,827] INFO [Controller id=2] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-10 11:50:16,839] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,840] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,840] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,841] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-10 11:50:16,843] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-10 11:50:16,876] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-10 11:50:21,878] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-10 11:50:21,879] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-10 11:50:21,883] DEBUG [Controller id=2] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-10 11:51:05,372] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:51:05,939] INFO [Controller id=2] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-10 11:51:05,939] DEBUG [Controller id=2] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-04-10 11:51:05,940] DEBUG [Controller id=2] Live brokers: 2 (kafka.controller.KafkaController)
[2020-04-10 11:51:05,945] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:51:06,171] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-10 11:51:06,171] DEBUG [Controller id=2] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-10 11:51:06,171] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2020-04-10 11:51:06,172] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:51:06,813] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:06,814] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:06,814] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:06,815] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:51:06,817] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-10 11:51:06,818] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:51:06,819] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:51:06,821] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-10 11:51:06,836] INFO [Controller id=2] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2020-04-10 11:51:06,839] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:51:06,839] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:51:06,839] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:51:06,842] INFO [Controller id=2] Broker failure callback for 1 (kafka.controller.KafkaController)
[2020-04-10 11:51:06,846] INFO [Controller id=2] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-04-10 11:51:06,852] DEBUG [Controller id=2] Unregister BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-10 11:51:06,853] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 45) (kafka.controller.KafkaController)
[2020-04-10 11:51:06,853] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker pop-os.localdomain:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to pop-os.localdomain:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:06,956] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker pop-os.localdomain:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to pop-os.localdomain:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:07,059] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker pop-os.localdomain:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to pop-os.localdomain:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:07,161] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker pop-os.localdomain:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to pop-os.localdomain:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:07,263] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker pop-os.localdomain:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to pop-os.localdomain:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:07,347] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:07,348] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:07,348] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:51:07,349] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:51:07,349] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-10 11:51:07,350] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:51:07,350] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:51:07,350] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:51:07,352] WARN [RequestSendThread controllerId=2] Controller 2 epoch 1 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=1, brokerEpoch=45, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='pop-os.localdomain', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker pop-os.localdomain:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:238)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-10 11:51:07,352] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-04-10 11:51:07,352] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:51:07,352] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:51:07,354] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-10 11:52:03,476] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:52:05,392] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:05,400] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:05,428] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-04-10 11:52:05,429] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-10 11:52:05,439] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-10 11:52:05,450] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-10 11:52:05,453] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-10 11:52:05,451] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-10 11:52:05,483] INFO [Controller id=2] Initialized broker epochs cache: Map(1 -> 113, 2 -> 112) (kafka.controller.KafkaController)
[2020-04-10 11:52:05,489] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:52:05,504] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:52:05,522] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:52:05,534] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:52:05,538] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:52:05,538] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:52:05,541] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:52:05,544] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:52:05,546] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-10 11:52:05,551] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,552] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,553] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-10 11:52:05,553] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-10 11:52:05,554] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-10 11:52:05,579] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:05,581] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:05,589] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:52:05,591] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:52:05,591] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:05,592] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:05,592] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:52:05,593] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:52:05,600] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:52:05,600] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-04-10 11:52:05,611] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,613] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,614] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,614] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-10 11:52:05,616] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-10 11:52:05,633] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-10 11:52:09,422] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-10 11:52:09,423] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-04-10 11:52:09,423] DEBUG [Controller id=2] Live brokers: 1 (kafka.controller.KafkaController)
[2020-04-10 11:52:09,428] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:52:09,443] INFO [Controller id=2] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-10 11:52:09,443] DEBUG [Controller id=2] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-10 11:52:09,443] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2020-04-10 11:52:09,443] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:52:10,636] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-10 11:52:10,637] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-10 11:52:10,640] DEBUG [Controller id=2] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-10 11:52:10,874] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,876] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,876] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,876] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:52:10,877] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2020-04-10 11:52:10,879] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:52:10,879] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:10,880] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,880] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,880] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,882] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,882] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,882] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:52:10,884] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-10 11:52:10,888] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,888] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,888] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:52:10,889] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:52:10,890] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-10 11:52:10,892] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:52:10,893] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:52:10,894] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-10 11:59:05,732] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:59:39,409] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-10 11:59:42,186] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:42,192] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:42,226] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-04-10 11:59:42,227] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-10 11:59:42,240] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-10 11:59:42,252] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-10 11:59:42,255] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-10 11:59:42,257] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-10 11:59:42,292] INFO [Controller id=2] Initialized broker epochs cache: Map(1 -> 182, 2 -> 181) (kafka.controller.KafkaController)
[2020-04-10 11:59:42,300] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:59:42,320] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:59:42,346] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-10 11:59:42,358] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:59:42,359] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-10 11:59:42,361] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-04-10 11:59:42,363] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:59:42,365] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-10 11:59:42,366] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-10 11:59:42,378] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,378] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,381] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-10 11:59:42,383] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-10 11:59:42,383] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-10 11:59:42,417] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:42,418] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:42,434] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:59:42,437] INFO [RequestSendThread controllerId=2] Controller 2 connected to pop-os.localdomain:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-10 11:59:42,440] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:42,441] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:42,442] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:59:42,444] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:59:42,473] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:59:42,473] INFO [Controller id=2] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-04-10 11:59:42,491] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,492] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,492] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,493] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-10 11:59:42,496] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-10 11:59:42,521] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-10 11:59:47,524] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-10 11:59:47,526] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-10 11:59:47,531] DEBUG [Controller id=2] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-10 11:59:55,855] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-04-10 11:59:55,855] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-04-10 11:59:55,856] DEBUG [Controller id=2] Live brokers: 1 (kafka.controller.KafkaController)
[2020-04-10 11:59:55,865] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:59:55,895] INFO [Controller id=2] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-10 11:59:55,895] DEBUG [Controller id=2] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-04-10 11:59:55,895] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2020-04-10 11:59:55,896] TRACE [Controller id=2] All leaders =  (kafka.controller.KafkaController)
[2020-04-10 11:59:56,971] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:56,973] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:56,973] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:56,974] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:59:56,975] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2020-04-10 11:59:56,976] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:59:56,977] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:56,978] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,978] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,978] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,979] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,979] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,979] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-10 11:59:56,981] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-04-10 11:59:57,365] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:57,366] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:57,366] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-10 11:59:57,367] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-10 11:59:57,370] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-10 11:59:57,373] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-10 11:59:57,387] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-10 11:59:57,391] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
